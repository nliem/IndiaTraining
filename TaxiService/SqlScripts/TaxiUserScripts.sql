--TAXI USER SCRIPTS

--CREATING THE TAXI USER TABLE

CREATE TABLE TAXIUSER(
	EMAIL VARCHAR2(30) PRIMARY KEY,
	NAME VARCHAR2(30),
	PASSWORD VARCHAR2(8),
	TELEPHONE NUMBER(10,0),
	CITY VARCHAR2(20)
);


--STORED PROCEDURE FOR ADDING USER TO TAXIUSER TABLE

CREATE OR REPLACE PROCEDURE ADD_TAXIUSER(USER_EMAIL TAXIUSER.EMAIL%TYPE,
USER_NAME TAXIUSER.NAME%TYPE,USER_PASSWORD TAXIUSER.PASSWORD%TYPE, 
USER_TELEPHONE TAXIUSER.TELEPHONE%TYPE, USER_CITY TAXIUSER.CITY%TYPE,
RESULT OUT NUMERIC)
IS
BEGIN
INSERT INTO TAXIUSER VALUES(USER_EMAIL, USER_NAME, USER_PASSWORD, USER_TELEPHONE,
USER_CITY);
RESULT := SQL%ROWCOUNT;
DBMS_OUTPUT.PUT_LINE(RESULT);
END;


--STORED PROCEDURE FOR DELETED USER FROM TAXIUSER TABLE

CREATE OR REPLACE PROCEDURE REMOVE_TAXIUSER(USER_EMAIL TAXIUSER.EMAIL%TYPE,
RESULT OUT NUMERIC)
IS
BEGIN
DELETE FROM TAXIUSER WHERE EMAIL = USER_EMAIL;
RESULT := SQL%ROWCOUNT;
DBMS_OUTPUT.PUT_LINE(RESULT);
END;


--STORED PROCEDURE FOR FINDING A USER FROM TAXIUSER TABLE

CREATE OR REPLACE PROCEDURE FIND_TAXIUSER(USER_EMAIL TAXIUSER.EMAIL%TYPE,
RESULT OUT SYS_REFCURSOR)
IS
BEGIN
OPEN RESULT FOR
SELECT * FROM TAXIUSER WHERE EMAIL = USER_EMAIL;
END;


--STORED PROCEDURE FOR VALIDATING CREDENTIALS

CREATE OR REPLACE PROCEDURE VALIDATE_USER(USER_EMAIL TAXIUSER.EMAIL%TYPE, 
RESULT OUT TAXIUSER.PASSWORD%TYPE)
IS
BEGIN
SELECT TAXIUSER.PASSWORD INTO RESULT FROM TAXIUSER WHERE EMAIL = USER_EMAIL;
DBMS_OUTPUT.PUT_LINE(RESULT);
END;