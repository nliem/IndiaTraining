--TAXI SCRIPTS

--CREATING THE TAXI TABLE

CREATE TABLE TAXI(
	CABNUMBER VARCHAR2(20) PRIMARY KEY,
	CABTYPE VARCHAR2(30),
	DRIVERNAME VARCHAR2(30),
	LOCATION VARCHAR2(20),
	AVAILABLE NUMBER(1,0),
	
	CONSTRAINT CHK_AVAILABILITY CHECK(AVAILABLE IN (0,1))
);

--STORED PROCEDURE FOR ADDING TAXI TO TABLE

CREATE OR REPLACE PROCEDURE ADD_TAXI(T_NUMBER TAXI.CABNUMBER%TYPE, T_TYPE 
TAXI.CABTYPE%TYPE, T_DRIVER TAXI.DRIVERNAME%TYPE, T_LOCATION TAXI.LOCATION%TYPE,
T_AVAILABLE TAXI.AVAILABLE%TYPE, RESULT OUT NUMERIC)
IS
BEGIN
	INSERT INTO TAXI VALUES(T_NUMBER, T_TYPE, T_DRIVER, T_LOCATION, T_AVAILABLE);
	RESULT := SQL%ROWCOUNT;
END ;

--STORED PROCEDURE FOR REMOVING A TAXI

CREATE OR REPLACE PROCEDURE REMOVE_TAXI(T_NUMBER TAXI.CABNUMBER%TYPE, RESULT OUT NUMERIC)
IS
BEGIN
	DELETE FROM TAXI WHERE CABNUMBER = T_NUMBER;
	RESULT := SQL%ROWCOUNT;
END ;

--STORED PROCEDURE FOR FINDING A TAXI

CREATE OR REPLACE PROCEDURE FIND_TAXI(T_NUMBER TAXI.CABNUMBER%TYPE, RESULT OUT SYS_REFCURSOR)
IS
BEGIN
	OPEN RESULT FOR
	SELECT * FROM TAXI WHERE CABNUMBER = T_NUMBER;
END ;

--STORED PROCEDURE FOR FINDING TAXIS IN GIVEN LOCATION

CREATE OR REPLACE PROCEDURE FIND_LOCATION_TAXIS(T_LOCATION TAXI.LOCATION%TYPE,
RESULT OUT SYS_REFCURSOR)
IS
BEGIN
	OPEN RESULT FOR
	SELECT * FROM TAXI WHERE LOCATION = T_LOCATION;
END ;


